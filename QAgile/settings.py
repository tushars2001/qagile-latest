"""
Django settings for QAgile project.

Generated by 'django-admin startproject' using Django 3.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import pdb
import sys
import environ
import logging
from django.utils.encoding import force_bytes, force_str


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
env = environ.Env()
environ.Env.read_env()

SECRET_KEY = env('SECRET_KEY')
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
DATA_UPLOAD_MAX_NUMBER_FIELDS = None

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'django_extensions',
    'django.contrib.humanize',
    # 'django_python3_saml',
    'psutil',
    'QAgile'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

ROOT_URLCONF = 'QAgile.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, "QAgile/home/templates"),
            os.path.join(BASE_DIR, "QAgile/admin/templates"),
            os.path.join(BASE_DIR, "QAgile/admin/templates/team"),
            os.path.join(BASE_DIR, "QAgile/admin/templates/rfs"),
            os.path.join(BASE_DIR, "QAgile/rfs/templates"),
            os.path.join(BASE_DIR, "QAgile/identity/templates"),
            os.path.join(BASE_DIR, "QAgile/analytics/templates"),
            os.path.join(BASE_DIR, "QAgile/tools/templates"),
            # os.path.join(BASE_DIR, "QAgile/ignite_tracker/templates"),
            os.path.join(BASE_DIR, "QAgile/tools/ff_validator/ui/templates"),
            os.path.join(BASE_DIR, "QAgile/test_data/templates"),
            os.path.join(BASE_DIR, "QAgile/user/templates"),
        ]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'QAgile.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': env('DBNAME'),
        'USER': env('DBUSER'),
        'PASSWORD': env('DBPASSWORD'),
        'HOST': env('DBHOST'),
        'PORT': env('DBPORT')
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/
PROJECT_DIR = os.path.dirname(__file__)

MEDIA_ROOT = os.path.join(PROJECT_DIR, 'media')

MEDIA_URL = '/media/'

STATIC_ROOT = os.path.join(PROJECT_DIR, 'static')

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(PROJECT_DIR, 'staticfiles'),
    # os.path.join(PROJECT_DIR, 'ignite_tracker'),
)

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ]
}

logger = logging.getLogger('django_auth_ldap')
logger.addHandler(logging.StreamHandler())
logger.setLevel(logging.DEBUG)

AUTHENTICATION_BACKENDS = (
    # 'django-python3-saml.backends.SAMLServiceProviderBackend',
    # 'django_auth_ldap.backend.LDAPBackend',
    'django.contrib.auth.backends.ModelBackend',
)

# SAML AREA STARTS

# This should setting should walk the path
# back to the project's root (e.g. where manage.py exists)
# Three folder back (/config/settings/.env - 3 = /)
root = environ.Path(__file__) - 3

# Initialize root function
PROJECT_ROOT = root()

# Initialize Env function
# Environ requires variable casting.
# Required variables are initialized
# in the ENV_CAST dict below.
ENV_CAST = {
    'HTTPS': (bool, False),
    'NEW_USER_GROUPS': (list, []),
    'ACTIVE_STATUS': (bool, False),
    'STAFF_STATUS': (bool, False),
    'DEBUG': (bool, True),
}
env = environ.Env(**ENV_CAST)

# Reads the .env file
env.read_env()

# Set the system path to the base application folder.
# This may not be required in your project.
# Below is an example setup.
# sys.path.insert(0, os.path.join(PROJECT_ROOT, 'apps'))

# SAML variable houses all .env variables in a single location.
# All variable requests in the module will pull from these settings.
# The .env file is used for security and should not be committed.
SAML = {
    'LOGIN_REDIRECT': env("LOGIN_REDIRECT_URL"),
    'X509CERT': env("X509CERT"),
    'HTTPS': 'on' if env("HTTPS") else 'off',
    'SP': {
        'METADATA_URL': env("SP_METADATA_URL"),
        'LOGIN_URL': env("SP_LOGIN_URL"),
        'LOGOUT_URL': env("SP_LOGOUT_URL"),
        'X509CERT': env("SP_X509CERT"),
        'PRIVATE_KEY': env("SP_PRIVATE_KEY"),
    },
    'IDP': {
        'METADATA_URL': env("IDP_METADATA_URL"),
        'SSO_URL': env("IDP_SSO_URL"),
        'SLO_URL': env("IDP_SLO_URL"),
        'X509_FINGERPRINT': env("IDP_X509_FINGERPRINT"),
    },
    'NEW_USER': {
        'GROUPS': env("NEW_USER_GROUPS"),
        'ACTIVE': env("ACTIVE_STATUS"),
        'STAFF': env("STAFF_STATUS"),
    },
    'CONTACT_INFO': {
        'TECHNICAL': {
            'GIVEN_NAME': env("CI_TECH_GIVEN_NAME"),
            'EMAIL': env("CI_TECH_EMAIL"),
        },
        'SUPPORT': {
            'GIVEN_NAME': env("CI_SUPPORT_GIVEN_NAME"),
            'EMAIL': env("CI_SUPPORT_EMAIL"),
        }
    },
    'ORGANIZATION_INFO': {
        'EN_US': {
            'NAME': env("ORG_NAME"),
            'DISPLAY_NAME': env("ORG_DISPLAY_NAME"),
            'URL': env("ORG_HOME_URL"),
        }
    }
}

#